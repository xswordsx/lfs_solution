#ifndef FILE_GENERATION_H
#define FILE_GENERATION_H

#ifndef STRING
#define STRING
#include <string>
#endif

/**
	Returns a string of type `<a_prefix><a_suffix>`
	where the suffix is of length (a_max_size - ||a_prefix||).

	Pre:
		'a_max_length' needs to be larger than ||a_prefix|| + ||a_suffix|| - 1
		where ||X|| is the length of string(X).
*/
std::string make_string(const std::string& a_prefix, size_t a_suffix, size_t a_max_length);

/**
	Generates a file with complete file path: `file_path`.
	The file has `lines` number of lines, each with line length no more than `line_length`.

	Pre:
		'file_path' needs to be a valid file path. It is not necessary for the file to exist.
	Post:
		If 'file_path' existed, it will be overriden.
*/
void create_file(size_t const &lines, const char* const file_path, size_t const &line_length = 99);

/**
	Generates a file with complete file path: `file_path`.
	The file has `lines` number of lines, each with line length no more than `line_length`.
	The function uses temporary files with complete file paths '<file_path><prefix>', generated by `make_string`.

	Pre:
		'file_path' needs to be a valid file path. It is not necessary for the file to exist.
		'<file_path><prefix>' needs to be a valid file path. It is not necessary for the files to exist.
	Post:
		If 'file_path' existed, it will be overriden.
		If '<file_path><prefix>' existed, it will be overriden.
*/
void concurent_generation(size_t& const cpu_count, size_t& const lines, const char* const file_path, size_t const &line_length = 99, size_t const &tmp_files_prefix_len = 4);

#endif